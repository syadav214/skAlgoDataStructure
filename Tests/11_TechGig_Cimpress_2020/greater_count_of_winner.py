def main():
    T = int(input())

    for i in range(T):
        N = int(input())
        gTeam = list(map(int, input().split()))
        gTeam.sort()
        oTeam = list(map(int, input().split()))
        oTeam.sort()
        count = 0
        i = 0
        j = 0
        while True:
            if(i > N -1):
                break            
            if(gTeam[i] > oTeam[j]):
                count +=1
                i +=1
                j +=1
            else:
                i +=1
        print(count)

main()

"""
Arrange optimally so that gTeam can have more greater count
1
370
24430 1706 21542 27795 348 18115 20851 11813 14713 11314 27421 10635 31585 8813 19403 22428 12829 10160 31458 23547 1362 19800 27478 10396 32440 6029 27841 31363 9166 35 12978 5071 22477 8386 26183 22264 6618 18501 30206 10069 29567 32609 6088 13025 11100 16519 12639 2366 4122 26379 6874 9210 28577 6533 28543 17426 3723 13176 24792 18612 13272 29233 16393 25417 7395 26866 12640 19635 28052 80 15918 24531 28888 1242 14549 15695 15694 2299 10019 23698 4676 7714 9950 11796 225 10527 160 13019 13731 21969 23781 11586 30221 28158 20323 20217 9881 6018 11418 2125 27892 15788 23979 23721 17002 10725 9837 24669 2719 3986 4542 17311 641 3900 30743 3791 7034 29934 21604 29696 5866 13791 23314 22963 30164 29009 1897 741 4312 30905 4892 30797 27745 8992 3102 5855 7455 28617 31928 26516 20664 15380 23001 9325 20154 4258 11181 3766 1493 18874 9328 31368 31047 7916 6533 13201 8855 19956 4802 7959 7046 27873 25615 16187 9283 10102 1327 31611 23006 27600 7133 21115 12543 19017 27675 22789 2264 3229 8903 10830 27224 18507 11887 11643 18337 28734 6758 21603 20413 10669 8215 14231 10892 26688 25242 13216 12545 5492 2181 27527 30094 18240 10245 21659 12509 18937 14637 12142 26305 371 653 4641 22380 25961 13319 26593 4322 7454 9182 2482 13486 32325 25104 21611 17875 29470 5606 24578 4869 3043 22985 15370 4377 16226 2391 21882 14779 7915 13750 27056 16991 364 13352 10934 16250 27099 31456 30915 2033 11476 16405 21765 27857 6532 3924 29085 6466 10693 18714 748 11958 32138 16546 13837 29030 9598 27644 28834 6399 232 23135 15828 6552 13010 25792 3221 30952 29290 19619 9000 950 15016 15666 27620 30608 7473 25228 32565 29888 15484 2911 3811 19580 12595 2233 5783 32605 24284 16411 30107 19 31672 9168 21985 3670 20459 1404 1095 15903 28638 30456 7705 32537 30178 11613 14295 14418 32534 6751 24889 19511 28554 12253 10865 6335 16804 437 3760 18406 25795 14813 26603 1117 28451 4784 20447 26240 9985 19333 4691 11656 9983 19334 5277 6402 8649 26304 22119 30336 2297 31094 28595 14222 6968 19899 12317 9191 7590 32576 17248 31721 17533 20842 32540 8007 3825 11175 15831 3070 6746
12291 27457 18826 12436 8182 9660 5209 5542 896 6427 23936 22691 18040 30378 29357 11214 16418 11887 25180 2049 22783 19888 28750 8016 17129 9910 11831 25321 30559 9680 3256 8254 28701 30618 30860 31079 19951 25726 22534 15553 25032 1404 31931 24540 19470 13863 23932 8596 9785 26608 11399 6013 27292 15015 7677 10885 3714 32319 29335 18132 637 466 6805 17143 3323 21476 1272 16958 13082 22508 28401 5730 9150 21777 18329 25707 22752 25137 31714 4305 25385 21287 16078 14050 5055 2894 8671 12131 30815 22849 4558 27258 23980 16357 2944 8396 19398 20650 7477 8162 12575 31501 2051 13777 12170 30050 5507 26 16277 8912 30154 8655 7705 6813 14746 9463 14351 13483 15578 2868 2213 16195 5444 20899 7570 16914 22878 27652 13734 29297 21419 31515 11685 15594 30242 16981 12117 2039 8671 8367 22230 5132 5913 4308 16946 7384 8532 29829 16181 8137 21463 12094 2943 27598 27233 21527 23255 24160 8728 27368 6082 29123 7874 4272 4692 137 12343 30520 4423 25177 3094 2035 31050 17902 20408 11817 32411 27746 24162 3156 5336 10669 28607 8395 4371 20073 25229 7581 12836 24280 10134 30656 835 15143 22754 29035 19670 7412 20779 9152 1927 3599 22417 19374 1434 15485 13199 24086 18045 20419 15662 10028 10401 9057 15736 31009 28041 2716 13104 11775 17441 384 20416 212 19792 28454 16499 530 20176 23859 6116 11062 2110 18593 27575 21928 24173 28610 31366 6370 20736 16769 28190 21461 28216 20972 3564 25992 14602 30703 30130 22787 13685 30818 9342 2155 3858 25159 30685 31598 3565 76 26444 1250 19859 920 5103 25512 27244 19395 134 27351 6475 28710 1436 29974 23876 28246 22017 10058 20414 8683 10107 18034 11976 27014 21433 9422 9649 7442 1416 27207 978 14665 17994 15371 21935 25722 32675 1912 5183 12426 17781 29755 24199 15930 31759 16825 29038 9639 11937 5038 20940 18455 10739 29203 23748 28402 12119 70 12884 23567 21469 12133 11818 12081 24517 28666 25273 17618 16954 9950 19085 29215 27965 26967 9179 16963 11743 17540 10845 6376 21683 5115 9052 24059 17027 11184 28687 5808 11586 22809 6691 4039 12610 32655 3739 32013 679 21496 31450 12837 21276 31651 32766 22664 16324 4723 12400 18123 

Output: 351


1
10
3 6 7 5 3 5 6 2 9 1
2 7 0 9 3 6 0 6 2 6

Output: 7
"""
